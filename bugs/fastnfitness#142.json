{
    "apk_name": "fastnfitness_v0.19.0.apk",
    "url": "https://github.com/brodeurlv/fastnfitness/issues/142",
    "repo": "fastnfitness",
    "title": "Crash after deleting a program that is in progress",
    "body": "If you start a program, then go to delete it without first stopping it, then the next time you go back into \"Workout\" the application will crash. It will be stuck in a crash loop.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a test program with any exercise.\r\n2. Go to Workout -> Program, select your new program and click \"Start Program\".\r\n3. Go to Program list, select your test program and delete it.\r\n4. Go back to Workout. The application will crash.\r\n\r\n**Expected behavior**\r\nIf a workout that is in progress gets deleted, simply stop it.\r\n\r\n**Additional context**\r\nI reproduced this one while playing around a bit. It looks like when you go back into the Workout page, there is a refresh that happens and it is trying to access a Program that does not exist anymore. Problem is that even if the program was deleted, it is still inside the mDbWorkoutHistory and set as running.\r\n\r\nI can look into this and fix it, it will help me familiarize myself with the code.",
    "comments": [
        "Hi @sdriv3r,\r\nThank you for raising this issue and for proposing to fix it. That ok for me. I have a new version 0.19.1 ongoing, I'm planning to release before the end of next week. Do you think you can address this bug before that?\r\n\r\nConcerning the bug, I haven't looked at it but I think the approach should be, more than just avoiding the crash, to consider the Deleted program as closed and to update the Program Status in the ProgramHistory DB. The best would be to do this proactively when the program is deleted.\r\n\r\nLet me know if you have questions. ",
        "Hi @brodeurlv ,\r\n\r\nThats the approach I was looking at taking, having the ProgramHistoryDB updated when the program is deleted. I can have this done by the end of this weekend, probably sooner. I'm mostly messing around, familiarizing myself with the code as well as android studio.\r\n\r\nI will let you know if I have any questions.\r\n\r\nThanks!",
        "Hi @brodeurlv ,\r\nSo I looked into it and got the hang of it. One question I had: should we update the ProgramHistory and set the status to closed so that this way there is still a trace of it, or should we simply delete all history related to that program, whether open or close?\r\n\r\nI think I would go with the deleting all history. My reasoning is that the ProgramHistory really just tracks the start and end times of a program, along with a status. If the program gets deleted, then the ProgramHistory really tracks nothing since the ID is now invalid. You just have an accumulation of useless entries in the database then.",
        "Hi @sdriv3r,\r\n\r\nI agree with your analysis. I don't see a reason to keep the ProgramHistory if the program is deleted. \r\nI was thinking maybe for future statistics but even there, this would not be really useful.\r\nSo go for deleting all history related to that program. \r\nThanks. "
    ]
}